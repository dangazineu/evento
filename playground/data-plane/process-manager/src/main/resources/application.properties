quarkus.kubernetes.service-type=NodePort
quarkus.kubernetes.readiness-probe.initial-delay=5s
quarkus.kubernetes.readiness-probe.period=5s
quarkus.kubernetes.expose=true

# These env vars are static when running the app within Kubernetes, but dynamic when running with quarkus:dev
quarkus.kubernetes.env-vars.kafka-bootstrap-servers.value=kafka-cluster-kafka-bootstrap:9092
#port is static in k8s, but host will vary depending on the domain and entity
quarkus.kubernetes.env-vars.entity-service-port.value=8080

# Kafka Configuration
mp.messaging.incoming.commands.group.id=process-manager
mp.messaging.incoming.commands.connector=smallrye-kafka
mp.messaging.incoming.commands.topic=${COMMANDS_TOPIC}
mp.messaging.incoming.commands.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer

mp.messaging.outgoing.events.connector=smallrye-kafka
mp.messaging.outgoing.events.topic=${EVENTS_TOPIC}
mp.messaging.outgoing.events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

entity-service/mp-rest/url=http://${ENTITY_SERVICE_HOST}:${ENTITY_SERVICE_PORT}
entity-service/mp-rest/scope=javax.inject.Singleton